<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/current/mule-jbossts.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd">

	<https:connector name="httpsConnector" cookieSpec="netscape"
		validateConnections="true" sendBufferSize="0" receiveBufferSize="0"
		receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000"
		socketSoLinger="0" doc:name="HTTP\HTTPS">
		<service-overrides
			messageFactory="org.mule.transport.http.HttpMultipartMuleMessageFactory" />
		<https:tls-key-store path="keystore.jks"
			keyPassword="changeit" storePassword="changeit" />
	</https:connector>
	<mulexml:namespace-manager
		includeConfigNamespaces="true">
		<mulexml:namespace prefix="mes"
			uri="http://www.alainn.com/SOA/message/1.0" />
		<mulexml:namespace prefix="mod"
			uri="http://www.alainn.com/SOA/model/1.0" />
	</mulexml:namespace-manager>

    <secure-property-placeholder:config name="Secure_Property_Placeholder" key="Retail4ConnectSF" location="config.${env}.properties" doc:name="Secure Property Placeholder"/>
	<db:mysql-config name="MySQL_Configuration"
		host="${db.host}"
		port="3306" user="${db.user}" password="${db.password}" database="${db.database}"
		doc:name="MySQL Configuration" />
    <data-mapper:config name="xml_to_map" transformationGraphPath="xml_to_map.grf" doc:name="xml_to_map"/>
    <data-mapper:config name="Map_To_XML" transformationGraphPath="map_to_xml.grf" doc:name="Map_To_XML"/>

	<flow name="OrderserviceFlow1" doc:name="OrderserviceFlow1">
		<https:inbound-endpoint exchange-pattern="request-response"
			host="localhost" port="${https.port}" path="order-service" doc:name=":8081/order-service"
			connector-ref="httpsConnector" />
		<cxf:proxy-service doc:name="Proxy service"
			namespace="http://www.alainn.com/SOA/service/Order/1.0" port="OrderPort"
			service="OrderService" wsdlLocation="service/OrderService.wsdl" payload="body" />
        <mulexml:dom-to-xml-transformer doc:name="DOM to XML"/>
		<set-variable variableName="opName"
			value="#[xpath('fn:local-name(/*)')]" doc:name="opName" />
		<choice doc:name="Choice">
			<when expression="#[opName == 'saveOrder']">
				<transactional action="ALWAYS_BEGIN" doc:name="Transactional">
					<db:insert config-ref="MySQL_Configuration"
						transactionalAction="ALWAYS_JOIN" target="flowVars.orderId"
						autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1"
						autoGeneratedKeysColumnNames="id" doc:name="insert order">
                        <db:parameterized-query><![CDATA[insert into online_order(customer_id, total, discount, pickup_location) values(#[xpath:/mes:saveOrder/mod:CustomerId],#[Double.valueOf(xpath('/mes:saveOrder/mod:Order/total/text()').text)],#[Double.valueOf(xpath('/mes:saveOrder/mod:Order/discount/text()').text)],#[xpath:/mes:saveOrder/mod:Order/pickupLocation])]]></db:parameterized-query>
					</db:insert>
                    <data-mapper:transform config-ref="xml_to_map" doc:name="XML To Map">
                        <data-mapper:input-arguments>
                            <data-mapper:input-argument key="orderId">#[flowVars.orderId[0].GENERATED_KEY]</data-mapper:input-argument>
                        </data-mapper:input-arguments>
                    </data-mapper:transform>
					<db:insert config-ref="MySQL_Configuration"
						transactionalAction="ALWAYS_JOIN" bulkMode="true"
						doc:name="insert order_items">
                        <db:parameterized-query><![CDATA[insert into order_item(order_id, quantity, sku_item_id) values(#[payload.order_id], #[payload.quantity], #[payload.sku_item_id])]]></db:parameterized-query>
					</db:insert>
				</transactional>
                <parse-template location="saveOrderResponse.xml" doc:name="saveOrderResponse.xml"/>

			</when>
            <when expression="#[opName == 'getOrder']">
                <db:select config-ref="MySQL_Configuration" doc:name="select order">
                    <db:parameterized-query><![CDATA[select total, discount, pickup_location, date from online_order]]></db:parameterized-query>
                </db:select>
                <data-mapper:transform config-ref="Map_To_XML" doc:name="Map To XML"/>
            </when>
			<otherwise>
				<scripting:component doc:name="Exception">
					<scripting:script engine="Groovy"><![CDATA[throw new RuntimeException("Unknown Operation: " + flowVars.opName);]]></scripting:script>
				</scripting:component>
			</otherwise>
		</choice>
	</flow>
</mule>
